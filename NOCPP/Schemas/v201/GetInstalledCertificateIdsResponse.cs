//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace NOCPP.Schemas.v201
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetInstalledCertificateIdsResponse_CustomDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("vendorId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string VendorId { get; set; } = default!;



        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Indicates the type of the requested certificate(s).
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum GetInstalledCertificateIdsResponse_GetCertificateIdUseEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"V2GRootCertificate")]
        V2GRootCertificate = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"MORootCertificate")]
        MORootCertificate = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"CSMSRootCertificate")]
        CSMSRootCertificate = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"V2GCertificateChain")]
        V2GCertificateChain = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"ManufacturerRootCertificate")]
        ManufacturerRootCertificate = 4,


    }

    /// <summary>
    /// Charging Station indicates if it can process the request.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum GetInstalledCertificateIdsResponse_GetInstalledCertificateStatusEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Accepted")]
        Accepted = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"NotFound")]
        NotFound = 1,


    }

    /// <summary>
    /// Used algorithms for the hashes provided.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum GetInstalledCertificateIdsResponse_HashAlgorithmEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SHA256")]
        SHA256 = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"SHA384")]
        SHA384 = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"SHA512")]
        SHA512 = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetInstalledCertificateIdsResponse_CertificateHashDataChainType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public GetInstalledCertificateIdsResponse_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("certificateHashData")]
        [System.ComponentModel.DataAnnotations.Required]
        public GetInstalledCertificateIdsResponse_CertificateHashDataType CertificateHashData { get; set; } = new GetInstalledCertificateIdsResponse_CertificateHashDataType();


        [System.Text.Json.Serialization.JsonPropertyName("certificateType")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GetInstalledCertificateIdsResponse_GetCertificateIdUseEnumType CertificateType { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("childCertificateHashData")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(4)]
        public System.Collections.Generic.ICollection<GetInstalledCertificateIdsResponse_CertificateHashDataType> ChildCertificateHashData { get; set; } = default!;


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetInstalledCertificateIdsResponse_CertificateHashDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public GetInstalledCertificateIdsResponse_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("hashAlgorithm")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GetInstalledCertificateIdsResponse_HashAlgorithmEnumType HashAlgorithm { get; set; } = default!;

        /// <summary>
        /// Hashed value of the Issuer DN (Distinguished Name).
        /// <br/>
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuerNameHash")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public string IssuerNameHash { get; set; } = default!;

        /// <summary>
        /// Hashed value of the issuers public key
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuerKeyHash")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public string IssuerKeyHash { get; set; } = default!;

        /// <summary>
        /// The serial number of the certificate.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string SerialNumber { get; set; } = default!;


    }

    /// <summary>
    /// Element providing more information about the status.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetInstalledCertificateIdsResponse_StatusInfoType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public GetInstalledCertificateIdsResponse_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// A predefined code for the reason why the status is returned in this response. The string is case-insensitive.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("reasonCode")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string ReasonCode { get; set; } = default!;

        /// <summary>
        /// Additional text to provide detailed information.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("additionalInfo")]
        [System.ComponentModel.DataAnnotations.StringLength(512)]
        public string AdditionalInfo { get; set; } = default!;


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetInstalledCertificateIdsResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public GetInstalledCertificateIdsResponse_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GetInstalledCertificateIdsResponse_GetInstalledCertificateStatusEnumType Status { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("statusInfo")]
        public GetInstalledCertificateIdsResponse_StatusInfoType StatusInfo { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("certificateHashDataChain")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<GetInstalledCertificateIdsResponse_CertificateHashDataChainType> CertificateHashDataChain { get; set; } = default!;


    }
}