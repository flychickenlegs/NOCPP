//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace NOCPP.Schemas.v201
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LogStatusNotificationRequest_CustomDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("vendorId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string VendorId { get; set; } = default!;



        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// This contains the status of the log upload.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum LogStatusNotificationRequest_UploadLogStatusEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"BadMessage")]
        BadMessage = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Idle")]
        Idle = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NotSupportedOperation")]
        NotSupportedOperation = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"PermissionDenied")]
        PermissionDenied = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"Uploaded")]
        Uploaded = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"UploadFailure")]
        UploadFailure = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"Uploading")]
        Uploading = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"AcceptedCanceled")]
        AcceptedCanceled = 7,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LogStatusNotificationRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public LogStatusNotificationRequest_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LogStatusNotificationRequest_UploadLogStatusEnumType Status { get; set; } = default!;

        /// <summary>
        /// The request id that was provided in GetLogRequest that started this log upload. This field is mandatory,
        /// <br/>unless the message was triggered by a TriggerMessageRequest AND there is no log upload ongoing.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public int RequestId { get; set; } = default!;


    }
}