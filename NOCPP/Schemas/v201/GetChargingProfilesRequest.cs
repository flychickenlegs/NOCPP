//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace NOCPP.Schemas.v201
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetChargingProfilesRequest_CustomDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("vendorId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string VendorId { get; set; } = default!;



        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum GetChargingProfilesRequest_ChargingLimitSourceEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"EMS")]
        EMS = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Other")]
        Other = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"SO")]
        SO = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"CSO")]
        CSO = 3,


    }

    /// <summary>
    /// Charging_ Profile. Charging_ Profile_ Purpose. Charging_ Profile_ Purpose_ Code
    /// <br/>urn:x-oca:ocpp:uid:1:569231
    /// <br/>Defines the purpose of the schedule transferred by this profile
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum GetChargingProfilesRequest_ChargingProfilePurposeEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ChargingStationExternalConstraints")]
        ChargingStationExternalConstraints = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"ChargingStationMaxProfile")]
        ChargingStationMaxProfile = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"TxDefaultProfile")]
        TxDefaultProfile = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"TxProfile")]
        TxProfile = 3,


    }

    /// <summary>
    /// Charging_ Profile
    /// <br/>urn:x-oca:ocpp:uid:2:233255
    /// <br/>A ChargingProfile consists of ChargingSchedule, describing the amount of power or current that can be delivered per time interval.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetChargingProfilesRequest_ChargingProfileCriterionType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public GetChargingProfilesRequest_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("chargingProfilePurpose")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GetChargingProfilesRequest_ChargingProfilePurposeEnumType ChargingProfilePurpose { get; set; } = default!;

        /// <summary>
        /// Charging_ Profile. Stack_ Level. Counter
        /// <br/>urn:x-oca:ocpp:uid:1:569230
        /// <br/>Value determining level in hierarchy stack of profiles. Higher values have precedence over lower values. Lowest level is 0.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("stackLevel")]
        public int StackLevel { get; set; } = default!;

        /// <summary>
        /// List of all the chargingProfileIds requested. Any ChargingProfile that matches one of these profiles will be reported. If omitted, the Charging Station SHALL not filter on chargingProfileId. This field SHALL NOT contain more ids than set in &amp;lt;&amp;lt;configkey-charging-profile-entries,ChargingProfileEntries.maxLimit&amp;gt;&amp;gt;
        /// <br/>
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("chargingProfileId")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<int> ChargingProfileId { get; set; } = default!;

        /// <summary>
        /// For which charging limit sources, charging profiles SHALL be reported. If omitted, the Charging Station SHALL not filter on chargingLimitSource.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("chargingLimitSource")]

        // TODO(system.text.json): Add string enum item converter
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(4)]
        public System.Collections.Generic.ICollection<GetChargingProfilesRequest_ChargingLimitSourceEnumType> ChargingLimitSource { get; set; } = default!;


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetChargingProfilesRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public GetChargingProfilesRequest_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// Reference identification that is to be used by the Charging Station in the &amp;lt;&amp;lt;reportchargingprofilesrequest, ReportChargingProfilesRequest&amp;gt;&amp;gt; when provided.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public int RequestId { get; set; } = default!;

        /// <summary>
        /// For which EVSE installed charging profiles SHALL be reported. If 0, only charging profiles installed on the Charging Station itself (the grid connection) SHALL be reported. If omitted, all installed charging profiles SHALL be reported.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evseId")]
        public int EvseId { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("chargingProfile")]
        [System.ComponentModel.DataAnnotations.Required]
        public GetChargingProfilesRequest_ChargingProfileCriterionType ChargingProfile { get; set; } = new GetChargingProfilesRequest_ChargingProfileCriterionType();


    }
}