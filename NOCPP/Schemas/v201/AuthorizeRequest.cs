//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace NOCPP.Schemas.v201
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuthorizeRequest_CustomDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("vendorId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string VendorId { get; set; } = default!;



        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Used algorithms for the hashes provided.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum AuthorizeRequest_HashAlgorithmEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SHA256")]
        SHA256 = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"SHA384")]
        SHA384 = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"SHA512")]
        SHA512 = 2,


    }

    /// <summary>
    /// Enumeration of possible idToken types.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum AuthorizeRequest_IdTokenEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Central")]
        Central = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"eMAID")]
        EMAID = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"ISO14443")]
        ISO14443 = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"ISO15693")]
        ISO15693 = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"KeyCode")]
        KeyCode = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"Local")]
        Local = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"MacAddress")]
        MacAddress = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"NoAuthorization")]
        NoAuthorization = 7,


    }

    /// <summary>
    /// Contains a case insensitive identifier to use for the authorization and the type of authorization to support multiple forms of identifiers.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuthorizeRequest_AdditionalInfoType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public AuthorizeRequest_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// This field specifies the additional IdToken.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("additionalIdToken")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(36)]
        public string AdditionalIdToken { get; set; } = default!;

        /// <summary>
        /// This defines the type of the additionalIdToken. This is a custom type, so the implementation needs to be agreed upon by all involved parties.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Type { get; set; } = default!;


    }

    /// <summary>
    /// Contains a case insensitive identifier to use for the authorization and the type of authorization to support multiple forms of identifiers.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuthorizeRequest_IdTokenType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public AuthorizeRequest_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("additionalInfo")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<AuthorizeRequest_AdditionalInfoType> AdditionalInfo { get; set; } = default!;

        /// <summary>
        /// IdToken is case insensitive. Might hold the hidden id of an RFID tag, but can for example also contain a UUID.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("idToken")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(36)]
        public string IdToken { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AuthorizeRequest_IdTokenEnumType Type { get; set; } = default!;


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuthorizeRequest_OCSPRequestDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public AuthorizeRequest_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("hashAlgorithm")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AuthorizeRequest_HashAlgorithmEnumType HashAlgorithm { get; set; } = default!;

        /// <summary>
        /// Hashed value of the Issuer DN (Distinguished Name).
        /// <br/>
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuerNameHash")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public string IssuerNameHash { get; set; } = default!;

        /// <summary>
        /// Hashed value of the issuers public key
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuerKeyHash")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public string IssuerKeyHash { get; set; } = default!;

        /// <summary>
        /// The serial number of the certificate.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string SerialNumber { get; set; } = default!;

        /// <summary>
        /// This contains the responder URL (Case insensitive). 
        /// <br/>
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("responderURL")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(512)]
        public string ResponderURL { get; set; } = default!;


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuthorizeRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public AuthorizeRequest_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("idToken")]
        [System.ComponentModel.DataAnnotations.Required]
        public AuthorizeRequest_IdTokenType IdToken { get; set; } = new AuthorizeRequest_IdTokenType();

        /// <summary>
        /// The X.509 certificated presented by EV and encoded in PEM format.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("certificate")]
        [System.ComponentModel.DataAnnotations.StringLength(5500)]
        public string Certificate { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("iso15118CertificateHashData")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(4)]
        public System.Collections.Generic.ICollection<AuthorizeRequest_OCSPRequestDataType> Iso15118CertificateHashData { get; set; } = default!;


    }
}