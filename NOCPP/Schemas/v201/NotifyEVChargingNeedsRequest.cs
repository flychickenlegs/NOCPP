//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace NOCPP.Schemas.v201
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NotifyEVChargingNeedsRequest_CustomDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("vendorId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string VendorId { get; set; } = default!;



        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Charging_ Needs. Requested. Energy_ Transfer_ Mode_ Code
    /// <br/>urn:x-oca:ocpp:uid:1:569209
    /// <br/>Mode of energy transfer requested by the EV.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum NotifyEVChargingNeedsRequest_EnergyTransferModeEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"DC")]
        DC = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"AC_single_phase")]
        AC_single_phase = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"AC_two_phase")]
        AC_two_phase = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"AC_three_phase")]
        AC_three_phase = 3,


    }

    /// <summary>
    /// AC_ Charging_ Parameters
    /// <br/>urn:x-oca:ocpp:uid:2:233250
    /// <br/>EV AC charging parameters.
    /// <br/>
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NotifyEVChargingNeedsRequest_ACChargingParametersType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public NotifyEVChargingNeedsRequest_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// AC_ Charging_ Parameters. Energy_ Amount. Energy_ Amount
        /// <br/>urn:x-oca:ocpp:uid:1:569211
        /// <br/>Amount of energy requested (in Wh). This includes energy required for preconditioning.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("energyAmount")]
        public int EnergyAmount { get; set; } = default!;

        /// <summary>
        /// AC_ Charging_ Parameters. EV_ Min. Current
        /// <br/>urn:x-oca:ocpp:uid:1:569212
        /// <br/>Minimum current (amps) supported by the electric vehicle (per phase).
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evMinCurrent")]
        public int EvMinCurrent { get; set; } = default!;

        /// <summary>
        /// AC_ Charging_ Parameters. EV_ Max. Current
        /// <br/>urn:x-oca:ocpp:uid:1:569213
        /// <br/>Maximum current (amps) supported by the electric vehicle (per phase). Includes cable capacity.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evMaxCurrent")]
        public int EvMaxCurrent { get; set; } = default!;

        /// <summary>
        /// AC_ Charging_ Parameters. EV_ Max. Voltage
        /// <br/>urn:x-oca:ocpp:uid:1:569214
        /// <br/>Maximum voltage supported by the electric vehicle
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evMaxVoltage")]
        public int EvMaxVoltage { get; set; } = default!;


    }

    /// <summary>
    /// Charging_ Needs
    /// <br/>urn:x-oca:ocpp:uid:2:233249
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NotifyEVChargingNeedsRequest_ChargingNeedsType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public NotifyEVChargingNeedsRequest_CustomDataType CustomData { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("acChargingParameters")]
        public NotifyEVChargingNeedsRequest_ACChargingParametersType AcChargingParameters { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("dcChargingParameters")]
        public NotifyEVChargingNeedsRequest_DCChargingParametersType DcChargingParameters { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("requestedEnergyTransfer")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public NotifyEVChargingNeedsRequest_EnergyTransferModeEnumType RequestedEnergyTransfer { get; set; } = default!;

        /// <summary>
        /// Charging_ Needs. Departure_ Time. Date_ Time
        /// <br/>urn:x-oca:ocpp:uid:1:569223
        /// <br/>Estimated departure time of the EV.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("departureTime")]
        public System.DateTimeOffset DepartureTime { get; set; } = default!;


    }

    /// <summary>
    /// DC_ Charging_ Parameters
    /// <br/>urn:x-oca:ocpp:uid:2:233251
    /// <br/>EV DC charging parameters
    /// <br/>
    /// <br/>
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NotifyEVChargingNeedsRequest_DCChargingParametersType
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public NotifyEVChargingNeedsRequest_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. EV_ Max. Current
        /// <br/>urn:x-oca:ocpp:uid:1:569215
        /// <br/>Maximum current (amps) supported by the electric vehicle. Includes cable capacity.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evMaxCurrent")]
        public int EvMaxCurrent { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. EV_ Max. Voltage
        /// <br/>urn:x-oca:ocpp:uid:1:569216
        /// <br/>Maximum voltage supported by the electric vehicle
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evMaxVoltage")]
        public int EvMaxVoltage { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. Energy_ Amount. Energy_ Amount
        /// <br/>urn:x-oca:ocpp:uid:1:569217
        /// <br/>Amount of energy requested (in Wh). This inludes energy required for preconditioning.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("energyAmount")]
        public int EnergyAmount { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. EV_ Max. Power
        /// <br/>urn:x-oca:ocpp:uid:1:569218
        /// <br/>Maximum power (in W) supported by the electric vehicle. Required for DC charging.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evMaxPower")]
        public int EvMaxPower { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. State_ Of_ Charge. Numeric
        /// <br/>urn:x-oca:ocpp:uid:1:569219
        /// <br/>Energy available in the battery (in percent of the battery capacity)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("stateOfCharge")]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int StateOfCharge { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. EV_ Energy_ Capacity. Numeric
        /// <br/>urn:x-oca:ocpp:uid:1:569220
        /// <br/>Capacity of the electric vehicle battery (in Wh)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evEnergyCapacity")]
        public int EvEnergyCapacity { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. Full_ SOC. Percentage
        /// <br/>urn:x-oca:ocpp:uid:1:569221
        /// <br/>Percentage of SoC at which the EV considers the battery fully charged. (possible values: 0 - 100)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fullSoC")]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int FullSoC { get; set; } = default!;

        /// <summary>
        /// DC_ Charging_ Parameters. Bulk_ SOC. Percentage
        /// <br/>urn:x-oca:ocpp:uid:1:569222
        /// <br/>Percentage of SoC at which the EV considers a fast charging process to end. (possible values: 0 - 100)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("bulkSoC")]
        [System.ComponentModel.DataAnnotations.Range(0, 100)]
        public int BulkSoC { get; set; } = default!;


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NotifyEVChargingNeedsRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public NotifyEVChargingNeedsRequest_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// Contains the maximum schedule tuples the car supports per schedule.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maxScheduleTuples")]
        public int MaxScheduleTuples { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("chargingNeeds")]
        [System.ComponentModel.DataAnnotations.Required]
        public NotifyEVChargingNeedsRequest_ChargingNeedsType ChargingNeeds { get; set; } = new NotifyEVChargingNeedsRequest_ChargingNeedsType();

        /// <summary>
        /// Defines the EVSE and connector to which the EV is connected. EvseId may not be 0.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evseId")]
        public int EvseId { get; set; } = default!;


    }
}