//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace NOCPP.Schemas.v201
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class StatusNotificationRequest_CustomDataType
    {

        [System.Text.Json.Serialization.JsonPropertyName("vendorId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string VendorId { get; set; } = default!;



        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// This contains the current status of the Connector.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum StatusNotificationRequest_ConnectorStatusEnumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Available")]
        Available = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Occupied")]
        Occupied = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"Reserved")]
        Reserved = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"Unavailable")]
        Unavailable = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"Faulted")]
        Faulted = 4,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class StatusNotificationRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("customData")]
        public StatusNotificationRequest_CustomDataType CustomData { get; set; } = default!;

        /// <summary>
        /// The time for which the status is reported. If absent time of receipt of the message will be assumed.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Timestamp { get; set; } = default!;


        [System.Text.Json.Serialization.JsonPropertyName("connectorStatus")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public StatusNotificationRequest_ConnectorStatusEnumType ConnectorStatus { get; set; } = default!;

        /// <summary>
        /// The id of the EVSE to which the connector belongs for which the the status is reported.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evseId")]
        public int EvseId { get; set; } = default!;

        /// <summary>
        /// The id of the connector within the EVSE for which the status is reported.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("connectorId")]
        public int ConnectorId { get; set; } = default!;


    }
}